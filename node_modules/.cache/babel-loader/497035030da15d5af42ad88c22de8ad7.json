{"ast":null,"code":"import { createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-732f03d4\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = [\"y1\", \"y2\"];\nconst _hoisted_2 = [\"points\"];\nconst _hoisted_3 = [\"x1\", \"x2\"];\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Últimos 30 días\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(), _createElementBlock(\"svg\", {\n    onTouchstart: $setup.tap,\n    onTouchmove: $setup.tap,\n    onTouchend: $setup.untap,\n    viewBox: \"0 0 300 200\"\n  }, [_createElementVNode(\"line\", {\n    stroke: \"#c4c4c4\",\n    \"stroke-width\": \"2\",\n    x1: \"0\",\n    y1: $setup.zero,\n    x2: \"300\",\n    y2: $setup.zero\n  }, null, 8\n  /* PROPS */\n  , _hoisted_1), _createElementVNode(\"polyline\", {\n    fill: \"none\",\n    stroke: \"#0689B0\",\n    \"stroke-width\": \"2\",\n    points: $setup.points\n  }, null, 8\n  /* PROPS */\n  , _hoisted_2), _withDirectives(_createElementVNode(\"line\", {\n    stroke: \"#04b500\",\n    \"stroke-width\": \"2\",\n    x1: $setup.pointer,\n    y1: \"0\",\n    x2: $setup.pointer,\n    y2: \"200\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_3), [[_vShow, $setup.showPointer]])], 32\n  /* HYDRATE_EVENTS */\n  )), _hoisted_4]);\n}","map":{"version":3,"mappings":";;;;;;;;gEAgCQA,oBAAsB,GAAtB,EAAsB,IAAtB,EAAG,iBAAH,EAAkB;AAAA;AAAlB;;;uBA/BJC,oBAgCM,KAhCN,EAgCM,IAhCN,EAgCM,gBA/BFA,oBA6BM,KA7BN,EA6BM;IA5BDC,YAAU,EAAEC,UA4BX;IA3BDC,WAAS,EAAED,UA2BV;IA1BDE,UAAQ,EAAEF,YA0BT;IAzBFG,OAAO,EAAC;EAyBN,CA7BN,GAMIN,oBAOE,MAPF,EAOE;IANEO,MAAM,EAAC,SAMT;IALE,gBAAa,GAKf;IAJEC,EAAE,EAAC,GAIL;IAHGC,EAAE,EAAEN,WAGP;IAFEO,EAAE,EAAC,KAEL;IADGC,EAAE,EAAER;EACP,CAPF;;EAAA,eAQAH,oBAKE,UALF,EAKE;IAJEY,IAAI,EAAC,MAIP;IAHEL,MAAM,EAAC,SAGT;IAFE,gBAAa,GAEf;IADGM,MAAM,EAAEV;EACX,CALF;;EAAA,+BAMAH,oBAQE,MARF,EAQE;IANEO,MAAM,EAAC,SAMT;IALE,gBAAa,GAKf;IAJGC,EAAE,EAAEL,cAIP;IAHEM,EAAE,EAAC,GAGL;IAFGC,EAAE,EAAEP,cAEP;IADEQ,EAAE,EAAC;EACL,CARF;;EAAA,yBACYR,sBArBhB;;EAAA,CA+BE,GADFW,UACE,CAhCN","names":["_createElementVNode","_createElementBlock","onTouchstart","$setup","onTouchmove","onTouchend","viewBox","stroke","x1","y1","x2","y2","fill","points","_hoisted_4"],"sourceRoot":"","sources":["/home/alexander/Desktop/ProyectosWeb/vue/ControlFinancieroPersonal/controlfinanciero/src/components/Resume/Graphic.vue"],"sourcesContent":["<template>\n    <div>\n        <svg\n            @touchstart=\"tap\"\n            @touchmove=\"tap\"\n            @touchend=\"untap\"\n            viewBox=\"0 0 300 200\"\n        >\n            <line\n                stroke=\"#c4c4c4\"\n                stroke-width=\"2\"\n                x1=\"0\"\n                :y1=\"zero\"\n                x2=\"300\"\n                :y2=\"zero\"\n            />\n            <polyline\n                fill=\"none\"\n                stroke=\"#0689B0\"\n                stroke-width=\"2\"\n                :points=\"points\"\n            />\n            <line\n                v-show=\"showPointer\"\n                stroke=\"#04b500\"\n                stroke-width=\"2\"\n                :x1=\"pointer\"\n                y1=\"0\"\n                :x2=\"pointer\"\n                y2=\"200\"\n            />\n        </svg>\n        <p>Últimos 30 días</p>\n    </div>\n</template>\n\n<script setup>\nimport { ref, toRefs, defineProps, defineEmits, computed, watch } from 'vue';\nconst props = defineProps({\n    amounts: {\n        type: Array,\n        default: () => [],\n    }\n});\nconst { amounts } = toRefs(props);\nconst amountToPixels = (amount) => {\n    const min = Math.min(...amounts.value);\n    const max = Math.max(...amounts.value);\n    const amountAbs = amount + Math.abs(min);\n    const minmax = Math.abs(max) + Math.abs(min);\n    return 200 - ((amountAbs * 100) / minmax) * 2;\n}\nconst zero = computed(() => {\n    return amountToPixels(0);\n});\nconst points = computed(() => {\n    const total = amounts.value.length;\n    return amounts.value.reduce((points, amount, i) => {\n        const x = (300 / total) * (i + 1);\n        const y = amountToPixels(amount);\n        return `${points} ${x},${y}`;\n    }, `0, ${amountToPixels(amounts.value.length ? amounts.value[0] : 0)}`);\n});\nconst showPointer = ref(false);\nconst pointer = ref(0);\n\nconst emit = defineEmits([\"select\"]);\n\nwatch(pointer, (value) => {\n    const index = Math.ceil((value / (300 / amounts.value.length)));\n    if (index < 0 || index > amounts.value.length) return;\n    emit(\"select\", amounts.value[index - 1]);\n});\n\nconst tap = ({ target, touches }) => {\n    showPointer.value = true;\n    const elementWidth = target.getBoundingClientRect().width;\n    const elementX = target.getBoundingClientRect().x;\n    const touchX = touches[0].clientX;\n    pointer.value = ((touchX - elementX) * 300) / elementWidth;\n    emit(\"select\", )\n}\nconst untap = () => {\n    showPointer.value = false;\n}\n</script>\n\n<style scoped>\nsvg {\n  width: 100%;\n}\np {\n  text-align: center;\n}\n</style>"]},"metadata":{},"sourceType":"module"}