{"ast":null,"code":"import Layout from \"./Layout.vue\";\nimport Header from \"./Header.vue\";\nimport Resume from \"./Resume/Index.vue\";\nimport Action from \"./Action.vue\";\nimport Movements from \"./Movements/Index.vue\";\nimport Graphic from \"./Resume/Graphic.vue\";\nexport default {\n  components: {\n    Layout,\n    Header,\n    Resume,\n    Action,\n    Movements,\n    Graphic\n  },\n\n  data() {\n    return {\n      label: null,\n      amount: null,\n      movements: []\n    };\n  },\n\n  computed: {\n    amounts() {\n      const lastDays = this.movements.filter(m => {\n        const today = new Date();\n        const oldDate = today.setDate(today.getDate() - 30);\n        return m.time > oldDate;\n      }).map(m => m.amount);\n      return lastDays.map((m, i) => {\n        const lastMovements = lastDays.slice(0, i + 1);\n        return lastMovements.reduce((suma, movement) => {\n          return suma + movement;\n        }, 0);\n      });\n    },\n\n    totalAmount() {\n      return this.movements.reduce((suma, m) => {\n        return suma + m.amount;\n      }, 0);\n    }\n\n  },\n\n  mounted() {\n    const movements = JSON.parse(localStorage.getItem(\"movements\"));\n\n    if (Array.isArray(movements)) {\n      this.movements = movements.map(m => {\n        return { ...m,\n          time: new Date(m.time)\n        };\n      });\n    }\n  },\n\n  methods: {\n    create(movement) {\n      this.movements.push(movement);\n      this.save();\n    },\n\n    remove(id) {\n      const index = this.movements.findIndex(m => m.id === id);\n      this.movements.splice(index, 1);\n      this.save();\n    },\n\n    save() {\n      localStorage.setItem(\"movements\", JSON.stringify(this.movements));\n    }\n\n  },\n\n  select(el) {\n    console.log(el);\n    this.amount = el;\n  }\n\n};","map":{"version":3,"mappings":"AA8BA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,eAAe;EACbC,UAAU,EAAE;IACVN,MADU;IAEVC,MAFU;IAGVC,MAHU;IAIVC,MAJU;IAKVC,SALU;IAMVC;EANU,CADC;;EASbE,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,IADF;MAELC,MAAM,EAAE,IAFH;MAGLC,SAAS,EAAE;IAHN,CAAP;EAKD,CAfY;;EAgBbC,QAAQ,EAAE;IACRC,OAAO,GAAG;MACR,MAAMC,QAAO,GAAI,KAAKH,SAAL,CACdI,MADc,CACPC,KAAK;QACX,MAAMC,KAAI,GAAI,IAAIC,IAAJ,EAAd;QACA,MAAMC,OAAM,GAAIF,KAAK,CAACG,OAAN,CAAcH,KAAK,CAACI,OAAN,KAAkB,EAAhC,CAAhB;QACA,OAAOL,CAAC,CAACM,IAAF,GAASH,OAAhB;MACD,CALc,EAMdI,GANc,CAMVP,KAAKA,CAAC,CAACN,MANG,CAAjB;MAQA,OAAOI,QAAQ,CAACS,GAAT,CAAa,CAACP,CAAD,EAAIQ,CAAJ,KAAU;QAC5B,MAAMC,aAAY,GAAIX,QAAQ,CAACY,KAAT,CAAe,CAAf,EAAkBF,IAAI,CAAtB,CAAtB;QACA,OAAOC,aAAa,CAACE,MAAd,CAAqB,CAACC,IAAD,EAAOC,QAAP,KAAoB;UAC9C,OAAOD,IAAG,GAAIC,QAAd;QACD,CAFM,EAEJ,CAFI,CAAP;MAGD,CALM,CAAP;IAMD,CAhBO;;IAiBRC,WAAW,GAAG;MACZ,OAAO,KAAKnB,SAAL,CAAegB,MAAf,CAAsB,CAACC,IAAD,EAAOZ,CAAP,KAAa;QACxC,OAAOY,IAAG,GAAIZ,CAAC,CAACN,MAAhB;MACD,CAFM,EAEJ,CAFI,CAAP;IAGF;;EArBQ,CAhBG;;EAuCbqB,OAAO,GAAG;IACR,MAAMpB,SAAQ,GAAIqB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlB;;IAEA,IAAIC,KAAK,CAACC,OAAN,CAAc1B,SAAd,CAAJ,EAA8B;MAC5B,KAAKA,SAAL,GAAiBA,SAAS,CAACY,GAAV,CAAcP,KAAK;QAClC,OAAO,EAAE,GAAGA,CAAL;UAAQM,IAAI,EAAE,IAAIJ,IAAJ,CAASF,CAAC,CAACM,IAAX;QAAd,CAAP;MACD,CAFgB,CAAjB;IAGF;EACD,CA/CY;;EAgDbgB,OAAO,EAAE;IACPC,MAAM,CAACV,QAAD,EAAW;MACf,KAAKlB,SAAL,CAAe6B,IAAf,CAAoBX,QAApB;MACA,KAAKY,IAAL;IACD,CAJM;;IAKPC,MAAM,CAACC,EAAD,EAAK;MACT,MAAMC,KAAI,GAAI,KAAKjC,SAAL,CAAekC,SAAf,CAAyB7B,KAAKA,CAAC,CAAC2B,EAAF,KAASA,EAAvC,CAAd;MACA,KAAKhC,SAAL,CAAemC,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;MACA,KAAKH,IAAL;IACD,CATM;;IAUPA,IAAI,GAAG;MACLP,YAAY,CAACa,OAAb,CAAqB,WAArB,EAAkCf,IAAI,CAACgB,SAAL,CAAe,KAAKrC,SAApB,CAAlC;IACF;;EAZO,CAhDI;;EA8DbsC,MAAM,CAACC,EAAD,EAAK;IACTC,OAAO,CAACC,GAAR,CAAYF,EAAZ;IACA,KAAKxC,MAAL,GAAcwC,EAAd;EACF;;AAjEa,CAAf","names":["Layout","Header","Resume","Action","Movements","Graphic","components","data","label","amount","movements","computed","amounts","lastDays","filter","m","today","Date","oldDate","setDate","getDate","time","map","i","lastMovements","slice","reduce","suma","movement","totalAmount","mounted","JSON","parse","localStorage","getItem","Array","isArray","methods","create","push","save","remove","id","index","findIndex","splice","setItem","stringify","select","el","console","log"],"sourceRoot":"","sources":["/home/alexander/Desktop/ProyectosWeb/vue/ControlFinancieroPersonal/controlfinanciero/src/components/Home.vue"],"sourcesContent":["<template>\n  <Layout>\n    <template #header>\n      <Header></Header>\n    </template>\n    <template #resume>\n      <Resume\n        :total-label=\"'Ahorro total'\"\n        :label=\"label\"\n        :total-amount=\"totalAmount\"\n        :amount=\"amount\"\n      >\n        <template #graphic>\n          <Graphic :amounts=\"amounts\" @select=\"select\"/>\n        </template>\n        <template #action>\n          <Action @create=\"create\" />\n        </template>\n      </Resume>\n    </template>\n    <template #movements>\n      <Movements \n        :movements=\"movements\" \n        @remove=\"remove\"  \n      />\n    </template>\n  </Layout>\n</template>\n\n<script>\nimport Layout from \"./Layout.vue\";\nimport Header from \"./Header.vue\";\nimport Resume from \"./Resume/Index.vue\";\nimport Action from \"./Action.vue\";\nimport Movements from \"./Movements/Index.vue\";\nimport Graphic from \"./Resume/Graphic.vue\";\nexport default {\n  components: {\n    Layout,\n    Header,\n    Resume,\n    Action,\n    Movements,\n    Graphic,\n},\n  data() {\n    return {\n      label: null,\n      amount: null,\n      movements: [],\n    };\n  },\n  computed: {\n    amounts() {\n      const lastDays = this.movements\n        .filter(m => {\n          const today = new Date();\n          const oldDate = today.setDate(today.getDate() - 30);\n          return m.time > oldDate;\n        })\n        .map(m => m.amount);\n      \n      return lastDays.map((m, i) => {\n        const lastMovements = lastDays.slice(0, i + 1);\n        return lastMovements.reduce((suma, movement) => {\n          return suma + movement\n        }, 0);\n      });\n    },\n    totalAmount() {\n      return this.movements.reduce((suma, m) => {\n        return suma + m.amount;\n      }, 0);\n    }\n  },\n  mounted() {\n    const movements = JSON.parse(localStorage.getItem(\"movements\"));\n\n    if (Array.isArray(movements)) {\n      this.movements = movements.map(m => {\n        return { ...m, time: new Date(m.time) };\n      });\n    }\n  },\n  methods: {\n    create(movement) {\n      this.movements.push(movement);\n      this.save()\n    },\n    remove(id) {\n      const index = this.movements.findIndex(m => m.id === id);\n      this.movements.splice(index, 1);\n      this.save()\n    },\n    save() {\n      localStorage.setItem(\"movements\", JSON.stringify(this.movements));\n    }\n  },\n  select(el) {\n    console.log(el);\n    this.amount = el;\n  }\n};\n</script>"]},"metadata":{},"sourceType":"module"}