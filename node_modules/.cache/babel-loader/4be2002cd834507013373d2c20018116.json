{"ast":null,"code":"import { ref, toRefs, computed, watch } from 'vue';\nexport default {\n  __name: 'Graphic',\n  props: {\n    amounts: {\n      type: Array,\n      default: () => []\n    }\n  },\n  emits: [\"select\"],\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const {\n      amounts\n    } = toRefs(props);\n\n    const amountToPixels = amount => {\n      const min = Math.min(...amounts.value);\n      const max = Math.max(...amounts.value);\n      const amountAbs = amount + Math.abs(min);\n      const minmax = Math.abs(max) + Math.abs(min);\n      return 200 - amountAbs * 100 / minmax * 2;\n    };\n\n    const zero = computed(() => {\n      return amountToPixels(0);\n    });\n    const points = computed(() => {\n      const total = amounts.value.length;\n      return amounts.value.reduce((points, amount, i) => {\n        const x = 300 / total * (i + 1);\n        const y = amountToPixels(amount);\n        return `${points} ${x},${y}`;\n      }, `0, ${amountToPixels(amounts.value.length ? amounts.value[0] : 0)}`);\n    });\n    const showPointer = ref(false);\n    const pointer = ref(0);\n    watch(pointer, value => {\n      const index = Math.ceil(value / (300 / amounts.value.length));\n      if (index < 0 || index > amounts.value.length) return;\n      emit(\"select\", amounts.value[index - 1]);\n    });\n\n    const tap = ({\n      target,\n      touches\n    }) => {\n      showPointer.value = true;\n      const elementWidth = target.getBoundingClientRect().width;\n      const elementX = target.getBoundingClientRect().x;\n      const touchX = touches[0].clientX;\n      pointer.value = (touchX - elementX) * 300 / elementWidth;\n      emit(\"select\");\n    };\n\n    const untap = () => {\n      showPointer.value = false;\n    };\n\n    const __returned__ = {\n      props,\n      amounts,\n      amountToPixels,\n      zero,\n      points,\n      showPointer,\n      pointer,\n      emit,\n      tap,\n      untap,\n      ref,\n      toRefs,\n      computed,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAqCA,SAASA,GAAT,EAAcC,MAAd,EAAgDC,QAAhD,EAA0DC,KAA1D,QAAuE,KAAvE;;;;;;;;;;;;;;;;;IAOA,MAAM;MAAEC;IAAF,IAAcH,MAAM,CAACI,KAAD,CAA1B;;IACA,MAAMC,cAAc,GAAIC,MAAD,IAAY;MAC/B,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,CAAS,GAAGJ,OAAO,CAACM,KAApB,CAAZ;MACA,MAAMC,GAAG,GAAGF,IAAI,CAACE,GAAL,CAAS,GAAGP,OAAO,CAACM,KAApB,CAAZ;MACA,MAAME,SAAS,GAAGL,MAAM,GAAGE,IAAI,CAACI,GAAL,CAASL,GAAT,CAA3B;MACA,MAAMM,MAAM,GAAGL,IAAI,CAACI,GAAL,CAASF,GAAT,IAAgBF,IAAI,CAACI,GAAL,CAASL,GAAT,CAA/B;MACA,OAAO,MAAQI,SAAS,GAAG,GAAb,GAAoBE,MAArB,GAA+B,CAA5C;IACH,CAND;;IAOA,MAAMC,IAAI,GAAGb,QAAQ,CAAC,MAAM;MACxB,OAAOI,cAAc,CAAC,CAAD,CAArB;IACH,CAFoB,CAArB;IAGA,MAAMU,MAAM,GAAGd,QAAQ,CAAC,MAAM;MAC1B,MAAMe,KAAK,GAAGb,OAAO,CAACM,KAAR,CAAcQ,MAA5B;MACA,OAAOd,OAAO,CAACM,KAAR,CAAcS,MAAd,CAAqB,CAACH,MAAD,EAAST,MAAT,EAAiBa,CAAjB,KAAuB;QAC/C,MAAMC,CAAC,GAAI,MAAMJ,KAAP,IAAiBG,CAAC,GAAG,CAArB,CAAV;QACA,MAAME,CAAC,GAAGhB,cAAc,CAACC,MAAD,CAAxB;QACA,OAAQ,GAAES,MAAO,IAAGK,CAAE,IAAGC,CAAE,EAA3B;MACH,CAJM,EAIH,MAAKhB,cAAc,CAACF,OAAO,CAACM,KAAR,CAAcQ,MAAd,GAAuBd,OAAO,CAACM,KAAR,CAAc,CAAd,CAAvB,GAA0C,CAA3C,CAA8C,EAJ9D,CAAP;IAKH,CAPsB,CAAvB;IAQA,MAAMa,WAAW,GAAGvB,GAAG,CAAC,KAAD,CAAvB;IACA,MAAMwB,OAAO,GAAGxB,GAAG,CAAC,CAAD,CAAnB;IAIAG,KAAK,CAACqB,OAAD,EAAWd,KAAD,IAAW;MACtB,MAAMe,KAAK,GAAGhB,IAAI,CAACiB,IAAL,CAAWhB,KAAK,IAAI,MAAMN,OAAO,CAACM,KAAR,CAAcQ,MAAxB,CAAhB,CAAd;MACA,IAAIO,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAGrB,OAAO,CAACM,KAAR,CAAcQ,MAAvC,EAA+C;MAC/CS,IAAI,CAAC,QAAD,EAAWvB,OAAO,CAACM,KAAR,CAAce,KAAK,GAAG,CAAtB,CAAX,CAAJ;IACH,CAJI,CAAL;;IAMA,MAAMG,GAAG,GAAG,CAAC;MAAEC,MAAF;MAAUC;IAAV,CAAD,KAAyB;MACjCP,WAAW,CAACb,KAAZ,GAAoB,IAApB;MACA,MAAMqB,YAAY,GAAGF,MAAM,CAACG,qBAAP,GAA+BC,KAApD;MACA,MAAMC,QAAQ,GAAGL,MAAM,CAACG,qBAAP,GAA+BX,CAAhD;MACA,MAAMc,MAAM,GAAGL,OAAO,CAAC,CAAD,CAAP,CAAWM,OAA1B;MACAZ,OAAO,CAACd,KAAR,GAAiB,CAACyB,MAAM,GAAGD,QAAV,IAAsB,GAAvB,GAA8BH,YAA9C;MACAJ,IAAI,CAAC,QAAD,CAAJ;IACH,CAPD;;IAQA,MAAMU,KAAK,GAAG,MAAM;MAChBd,WAAW,CAACb,KAAZ,GAAoB,KAApB;IACH,CAFD","names":["ref","toRefs","computed","watch","amounts","props","amountToPixels","amount","min","Math","value","max","amountAbs","abs","minmax","zero","points","total","length","reduce","i","x","y","showPointer","pointer","index","ceil","emit","tap","target","touches","elementWidth","getBoundingClientRect","width","elementX","touchX","clientX","untap"],"sources":["/home/alexander/Desktop/ProyectosWeb/vue/ControlFinancieroPersonal/controlfinanciero/controlfinanciero/src/components/Resume/Graphic.vue"],"sourcesContent":["<template>\n    <div>\n        <svg\n            @touchstart=\"tap\"\n            @touchmove=\"tap\"\n            @touchend=\"untap\"\n            viewBox=\"0 0 300 200\"\n        >\n            <line\n                stroke=\"#c4c4c4\"\n                stroke-width=\"2\"\n                x1=\"0\"\n                :y1=\"zero\"\n                x2=\"300\"\n                :y2=\"zero\"\n            />\n            <polyline\n                fill=\"none\"\n                stroke=\"#0689B0\"\n                stroke-width=\"2\"\n                :points=\"points\"\n            />\n            <line\n                v-show=\"showPointer\"\n                stroke=\"#04b500\"\n                stroke-width=\"2\"\n                :x1=\"pointer\"\n                y1=\"0\"\n                :x2=\"pointer\"\n                y2=\"200\"\n            />\n        </svg>\n        <p>Últimos 30 días</p>\n    </div>\n</template>\n\n<script setup>\nimport { ref, toRefs, defineProps, defineEmits, computed, watch } from 'vue';\nconst props = defineProps({\n    amounts: {\n        type: Array,\n        default: () => [],\n    }\n});\nconst { amounts } = toRefs(props);\nconst amountToPixels = (amount) => {\n    const min = Math.min(...amounts.value);\n    const max = Math.max(...amounts.value);\n    const amountAbs = amount + Math.abs(min);\n    const minmax = Math.abs(max) + Math.abs(min);\n    return 200 - ((amountAbs * 100) / minmax) * 2;\n}\nconst zero = computed(() => {\n    return amountToPixels(0);\n});\nconst points = computed(() => {\n    const total = amounts.value.length;\n    return amounts.value.reduce((points, amount, i) => {\n        const x = (300 / total) * (i + 1);\n        const y = amountToPixels(amount);\n        return `${points} ${x},${y}`;\n    }, `0, ${amountToPixels(amounts.value.length ? amounts.value[0] : 0)}`);\n});\nconst showPointer = ref(false);\nconst pointer = ref(0);\n\nconst emit = defineEmits([\"select\"]);\n\nwatch(pointer, (value) => {\n    const index = Math.ceil((value / (300 / amounts.value.length)));\n    if (index < 0 || index > amounts.value.length) return;\n    emit(\"select\", amounts.value[index - 1]);\n});\n\nconst tap = ({ target, touches }) => {\n    showPointer.value = true;\n    const elementWidth = target.getBoundingClientRect().width;\n    const elementX = target.getBoundingClientRect().x;\n    const touchX = touches[0].clientX;\n    pointer.value = ((touchX - elementX) * 300) / elementWidth;\n    emit(\"select\", )\n}\nconst untap = () => {\n    showPointer.value = false;\n}\n</script>\n\n<style scoped>\nsvg {\n  width: 100%;\n}\np {\n  text-align: center;\n}\n</style>"]},"metadata":{},"sourceType":"module"}